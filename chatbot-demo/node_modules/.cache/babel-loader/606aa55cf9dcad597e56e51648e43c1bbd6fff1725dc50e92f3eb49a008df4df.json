{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Sparrowthon_Spot_AIChatbot\\\\chatbot-demo\\\\src\\\\services\\\\GeminiService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  GoogleGenerativeAI\n} = require(\"@google/generative-ai\");\nconst genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);\nconst generateContent = async (prompt, modelName) => {\n  try {\n    const model = genAI.getGenerativeModel({\n      model: \"gemini-1.5-flash\"\n    });\n    const promptpp = \"hi\";\n    const result = await model.generateContent(promptpp);\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n    const response = await result.response; // Access text directly from response\n    return response;\n  } catch (error) {\n    console.error('Error generating content:', error.message);\n    throw new Error('Failed to generate content');\n  }\n};\ngenerateContent();","map":{"version":3,"names":["GoogleGenerativeAI","require","genAI","process","env","GOOGLE_API_KEY","generateContent","prompt","modelName","model","getGenerativeModel","promptpp","result","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","response","error","console","message","Error"],"sources":["C:/Users/ADMIN/Desktop/Sparrowthon_Spot_AIChatbot/chatbot-demo/src/services/GeminiService.js"],"sourcesContent":["const { GoogleGenerativeAI } = require(\"@google/generative-ai\");\r\nconst genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);\r\n\r\nconst generateContent = async (prompt, modelName) => {\r\n  try {\r\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\"});\r\n    const promptpp=\"hi\"\r\n    const result = await model.generateContent(promptpp);\r\n    <div><h1>HI</h1></div>\r\n    const response = await result.response; // Access text directly from response\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error generating content:', error.message);\r\n    throw new Error('Failed to generate content');\r\n  }\r\n};\r\n\r\ngenerateContent();\r\n"],"mappings":";;AAAA,MAAM;EAAEA;AAAmB,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC/D,MAAMC,KAAK,GAAG,IAAIF,kBAAkB,CAACG,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;AAEhE,MAAMC,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EACnD,IAAI;IACF,MAAMC,KAAK,GAAGP,KAAK,CAACQ,kBAAkB,CAAC;MAAED,KAAK,EAAE;IAAkB,CAAC,CAAC;IACpE,MAAME,QAAQ,GAAC,IAAI;IACnB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACH,eAAe,CAACK,QAAQ,CAAC;IACpD,aAAAE,OAAA;MAAAC,QAAA,eAAKD,OAAA;QAAAC,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IACtB,MAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACO,QAAQ,CAAC,CAAC;IACxC,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;IACzD,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC;AAEDjB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}